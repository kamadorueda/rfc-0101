diff --git a/monsters/extra-newlines/after-nixpkgs-fmt.nix b/monsters/extra-newlines/after-nixfmt.nix
index 88eff81..a63065f 100644
--- a/monsters/extra-newlines/after-nixpkgs-fmt.nix
+++ b/monsters/extra-newlines/after-nixfmt.nix
@@ -1,17 +1,18 @@
-{ config
-, lib
-, pkgs
-, ...
+{
 
-}:
+config,
 
-with
+lib,
 
-lib;
+pkgs,
 
-let
+...
 
+}:
 
+with
 
+  lib;
 
+let
 
@@ -19,3 +20,3 @@ let
 
-    (config.boot)
+  (config.boot)
 
@@ -28,3 +26,3 @@ let
 
-    (config.boot.kernel)
+  (config.boot.kernel)
 
@@ -39,3 +34,3 @@ let
 
-    (config.boot.kernelPackages)
+  (config.boot.kernelPackages)
 
@@ -43,7 +38,5 @@ let
 
+  kernelModulesConf
 
-
-
-
-  kernelModulesConf =
+    =
 
@@ -51,22 +44,9 @@ let
 
-      "nixos.conf"
-
-
-
-
-
-
-
-
-      ''
-        ${concatStringsSep "\n" config.boot.kernelModules}
-      '';
-
-in
-
-{
-
-
+    "nixos.conf"
 
+    ''
+      ${concatStringsSep "\n" config.boot.kernelModules}
+    '';
 
+in {
 
@@ -74,7 +54,5 @@ in
 
+  options
 
-
-
-
-  options =
+    =
 
@@ -82,11 +60,5 @@ in
 
+      boot.kernel.features
 
-
-
-
-
-
-
-
-      boot.kernel.features =
+        =
 
@@ -94,38 +66,41 @@ in
 
-          {
-
+        {
 
-            default =
+          default
 
-              { };
+            =
 
+            { };
 
-            example =
+          example
 
-              literalExpression
+            =
 
-                "{debug= true;}";
+            literalExpression
 
+            "{debug= true;}";
 
-            internal =
+          internal
 
-              true;
+            =
 
+            true;
 
-            description =
+          description
 
-              ''
-                This option allows to enable or disable certain kernel features.
-                It's not API, because it's about kernel feature sets, that
-                make sense for specific use cases. Mostly along with programs,
-                which would have separate nixos options.
-                `grep features pkgs/os-specific/linux/kernel/common-config.nix`
-              '';
+            =
 
+            ''
+              This option allows to enable or disable certain kernel features.
+              It's not API, because it's about kernel feature sets, that
+              make sense for specific use cases. Mostly along with programs,
+              which would have separate nixos options.
+              `grep features pkgs/os-specific/linux/kernel/common-config.nix`
+            '';
 
-          };
+        };
 
+      boot.kernelPackages
 
-
-      boot.kernelPackages =
+        =
 
@@ -133,121 +108,125 @@ in
 
-          {
-
-
-            default =
+        {
 
-              pkgs.linuxPackages;
+          default
 
+            =
 
-            type =
+            pkgs.linuxPackages;
 
-              types.unspecified
+          type
 
-              //
+            =
 
-              {
-
-                merge =
-
-                  mergeEqualOption;
+            types.unspecified
 
-              };
+            //
 
+            {
 
-            apply =
+              merge
 
-              kernelPackages:
+                =
 
-              kernelPackages.extend
+                mergeEqualOption;
 
-                (self:
+            };
 
-                super:
+          apply
 
-                {
+            =
 
+            kernelPackages:
 
-                  kernel =
+            kernelPackages.extend
 
-                    super.kernel.override
+            (self:
 
-                      (originalArgs:
-
-                        {
+              super:
 
+              {
 
-                          inherit
+                kernel
 
-                            randstructSeed;
+                  =
 
+                  super.kernel.override
 
-                          kernelPatches =
+                  (originalArgs:
 
-                            (
-                              originalArgs.kernelPatches
+                    {
 
-                                or
+                      inherit
 
-                                [ ]
-                            )
+                        randstructSeed;
 
-                            ++
+                      kernelPatches
 
-                            kernelPatches;
+                        =
 
+                        (originalArgs.kernelPatches
 
-                          features =
+                          or
 
-                            lib.recursiveUpdate
+                          [ ])
 
-                              super.kernel.features
+                        ++
 
-                              features;
+                        kernelPatches;
 
+                      features
 
-                        });
+                        =
 
+                        lib.recursiveUpdate
 
-                });
+                        super.kernel.features
 
+                        features;
 
-            # We don't want to evaluate all of linuxPackages for the manual
-            # - some of it might not even evaluate correctly.
+                    });
 
+              });
 
-            defaultText =
+          # We don't want to evaluate all of linuxPackages for the manual
+          # - some of it might not even evaluate correctly.
 
-              literalExpression
+          defaultText
 
-                "pkgs.linuxPackages";
+            =
 
+            literalExpression
 
-            example =
+            "pkgs.linuxPackages";
 
-              literalExpression
+          example
 
-                "pkgs.linuxKernel.packages.linux_5_10";
+            =
 
+            literalExpression
 
-            description =
+            "pkgs.linuxKernel.packages.linux_5_10";
 
-              ''
-                This option allows you to override the Linux kernel used by
-                NixOS.  Since things like external kernel module packages are
-                tied to the kernel you're using, it also overrides those.
-                This option is a function that takes Nixpkgs as an argument
-                (as a convenience), and returns an attribute set containing at
-                the very least an attribute <varname>kernel</varname>.
-                Additional attributes may be needed depending on your
-                configuration.  For instance, if you use the NVIDIA X driver,
-                then it also needs to contain an attribute
-                <varname>nvidia_x11</varname>.
-              '';
+          description
 
+            =
 
-          };
+            ''
+              This option allows you to override the Linux kernel used by
+              NixOS.  Since things like external kernel module packages are
+              tied to the kernel you're using, it also overrides those.
+              This option is a function that takes Nixpkgs as an argument
+              (as a convenience), and returns an attribute set containing at
+              the very least an attribute <varname>kernel</varname>.
+              Additional attributes may be needed depending on your
+              configuration.  For instance, if you use the NVIDIA X driver,
+              then it also needs to contain an attribute
+              <varname>nvidia_x11</varname>.
+            '';
 
+        };
 
+      boot.kernelPatches
 
-      boot.kernelPatches =
+        =
 
@@ -255,25 +234,27 @@ in
 
-          {
-
+        {
 
-            type =
+          type
 
-              types.listOf
+            =
 
-                types.attrs;
+            types.listOf
 
+            types.attrs;
 
-            default =
+          default
 
-              [ ];
+            =
 
+            [ ];
 
-            example =
+          example
 
-              literalExpression
+            =
 
-                "[ pkgs.kernelPatches.ubuntu_fan_4_4 ]";
-            description = "A list of additional patches to apply to the kernel.";
-          };
+            literalExpression
 
+            "[ pkgs.kernelPatches.ubuntu_fan_4_4 ]";
+          description = "A list of additional patches to apply to the kernel.";
+        };
 
