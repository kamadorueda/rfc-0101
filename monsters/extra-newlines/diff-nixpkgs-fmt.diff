diff --git a/monsters/extra-newlines/before.nix b/monsters/extra-newlines/after-nixpkgs-fmt.nix
index 54ed128..88eff81 100644
--- a/monsters/extra-newlines/before.nix
+++ b/monsters/extra-newlines/after-nixpkgs-fmt.nix
@@ -1,10 +1,5 @@
-{
-
-config,
-
-lib,
-
-pkgs,
-
-...
+{ config
+, lib
+, pkgs
+, ...
 
@@ -22,7 +17,7 @@ let
 
-inherit
+  inherit
 
-(config.boot)
+    (config.boot)
 
-kernelPatches;
+    kernelPatches;
 
@@ -31,9 +26,9 @@ kernelPatches;
 
-inherit
+  inherit
 
-(config.boot.kernel)
+    (config.boot.kernel)
 
-features
+    features
 
-randstructSeed;
+    randstructSeed;
 
@@ -42,7 +37,7 @@ randstructSeed;
 
-inherit
+  inherit
 
-(config.boot.kernelPackages)
+    (config.boot.kernelPackages)
 
-kernel;
+    kernel;
 
@@ -52,9 +47,8 @@ kernel;
 
-kernelModulesConf
+  kernelModulesConf =
 
-=
+    pkgs.writeText
 
-pkgs.writeText
+      "nixos.conf"
 
-"nixos.conf"
 
@@ -66,6 +60,5 @@ pkgs.writeText
 
-
-''
-      ${concatStringsSep "\n" config.boot.kernelModules}
-    '';
+      ''
+        ${concatStringsSep "\n" config.boot.kernelModules}
+      '';
 
@@ -79,3 +72,3 @@ in
 
-###### interface
+  ###### interface
 
@@ -85,7 +78,6 @@ in
 
-options
+  options =
 
-=
+    {
 
-{
 
@@ -98,230 +90,192 @@ options
 
+      boot.kernel.features =
 
-boot.kernel.features
+        mkOption
 
-=
+          {
 
-mkOption
 
-{
+            default =
 
+              { };
 
-default
 
-=
+            example =
 
-{};
+              literalExpression
 
+                "{debug= true;}";
 
-example
 
-=
+            internal =
 
-literalExpression
+              true;
 
-"{debug= true;}";
 
+            description =
 
-internal
+              ''
+                This option allows to enable or disable certain kernel features.
+                It's not API, because it's about kernel feature sets, that
+                make sense for specific use cases. Mostly along with programs,
+                which would have separate nixos options.
+                `grep features pkgs/os-specific/linux/kernel/common-config.nix`
+              '';
 
-=
 
-true;
+          };
 
 
-description
 
-=
+      boot.kernelPackages =
 
-''
-        This option allows to enable or disable certain kernel features.
-        It's not API, because it's about kernel feature sets, that
-        make sense for specific use cases. Mostly along with programs,
-        which would have separate nixos options.
-        `grep features pkgs/os-specific/linux/kernel/common-config.nix`
-      '';
+        mkOption
 
+          {
 
-};
 
+            default =
 
+              pkgs.linuxPackages;
 
-boot.kernelPackages
 
-=
+            type =
 
-mkOption
+              types.unspecified
 
-{
+              //
 
+              {
 
-default
+                merge =
 
-=
+                  mergeEqualOption;
 
-pkgs.linuxPackages;
+              };
 
 
-type
+            apply =
 
-=
+              kernelPackages:
 
-types.unspecified
+              kernelPackages.extend
 
-//
+                (self:
 
-{
+                super:
 
-merge
+                {
 
-=
 
-mergeEqualOption;
+                  kernel =
 
-};
+                    super.kernel.override
 
+                      (originalArgs:
 
-apply
+                        {
 
-=
 
-kernelPackages:
+                          inherit
 
-kernelPackages.extend
+                            randstructSeed;
 
-(self:
 
-super:
+                          kernelPatches =
 
-{
+                            (
+                              originalArgs.kernelPatches
 
+                                or
 
-kernel
+                                [ ]
+                            )
 
-=
+                            ++
 
-super.kernel.override
+                            kernelPatches;
 
-(originalArgs:
-
-{
 
+                          features =
 
-inherit
+                            lib.recursiveUpdate
 
-randstructSeed;
+                              super.kernel.features
 
+                              features;
 
-kernelPatches
 
-=
+                        });
 
-(originalArgs.kernelPatches
 
-or
+                });
 
-[])
 
-++
+            # We don't want to evaluate all of linuxPackages for the manual
+            # - some of it might not even evaluate correctly.
 
-kernelPatches;
 
+            defaultText =
 
-features
+              literalExpression
 
-=
+                "pkgs.linuxPackages";
 
-lib.recursiveUpdate
 
-super.kernel.features
+            example =
 
-features;
+              literalExpression
 
+                "pkgs.linuxKernel.packages.linux_5_10";
 
-});
 
+            description =
 
-});
+              ''
+                This option allows you to override the Linux kernel used by
+                NixOS.  Since things like external kernel module packages are
+                tied to the kernel you're using, it also overrides those.
+                This option is a function that takes Nixpkgs as an argument
+                (as a convenience), and returns an attribute set containing at
+                the very least an attribute <varname>kernel</varname>.
+                Additional attributes may be needed depending on your
+                configuration.  For instance, if you use the NVIDIA X driver,
+                then it also needs to contain an attribute
+                <varname>nvidia_x11</varname>.
+              '';
 
 
-# We don't want to evaluate all of linuxPackages for the manual
-      # - some of it might not even evaluate correctly.
+          };
 
 
-defaultText
 
-=
+      boot.kernelPatches =
 
-literalExpression
+        mkOption
 
-"pkgs.linuxPackages";
+          {
 
 
-example
+            type =
 
-=
+              types.listOf
 
-literalExpression
+                types.attrs;
 
-"pkgs.linuxKernel.packages.linux_5_10";
 
+            default =
 
-description
-
-=
-
-''
-        This option allows you to override the Linux kernel used by
-        NixOS.  Since things like external kernel module packages are
-        tied to the kernel you're using, it also overrides those.
-        This option is a function that takes Nixpkgs as an argument
-        (as a convenience), and returns an attribute set containing at
-        the very least an attribute <varname>kernel</varname>.
-        Additional attributes may be needed depending on your
-        configuration.  For instance, if you use the NVIDIA X driver,
-        then it also needs to contain an attribute
-        <varname>nvidia_x11</varname>.
-      '';
-
+              [ ];
 
-};
 
+            example =
 
+              literalExpression
 
-boot.kernelPatches
+                "[ pkgs.kernelPatches.ubuntu_fan_4_4 ]";
+            description = "A list of additional patches to apply to the kernel.";
+          };
 
-=
 
-mkOption
-
-{
-
-
-type
-
-=
-
-types.listOf
-
-types.attrs;
-
-
-default
-
-=
-
-[];
-
-
-example
-
-=
-
-literalExpression
-
-"[ pkgs.kernelPatches.ubuntu_fan_4_4 ]";
-      description = "A list of additional patches to apply to the kernel.";
     };
-
-
-};}
+}
