diff --git a/idioms/lib/trivial/before.nix b/idioms/lib/trivial/after-nixpkgs-fmt.nix
index c68bac9..8949964 100644
--- a/idioms/lib/trivial/before.nix
+++ b/idioms/lib/trivial/after-nixpkgs-fmt.nix
@@ -90,3 +90,3 @@ rec {
     or (import ./zip-int-bits.nix
-        (a: b: if a==1 && b==1 then 1 else 0));
+    (a: b: if a == 1 && b == 1 then 1 else 0));
 
@@ -95,3 +95,3 @@ rec {
     or (import ./zip-int-bits.nix
-        (a: b: if a==1 || b==1 then 1 else 0));
+    (a: b: if a == 1 || b == 1 then 1 else 0));
 
@@ -100,3 +100,3 @@ rec {
     or (import ./zip-int-bits.nix
-        (a: b: if a!=b then 1 else 0));
+    (a: b: if a != b then 1 else 0));
 
@@ -192,7 +192,8 @@ rec {
       revisionFile = "${toString ./..}/.git-revision";
-      gitRepo      = "${toString ./..}/.git";
-    in if lib.pathIsGitRepo gitRepo
-       then lib.commitIdFromGitRepo gitRepo
-       else if lib.pathExists revisionFile then lib.fileContents revisionFile
-       else default;
+      gitRepo = "${toString ./..}/.git";
+    in
+    if lib.pathIsGitRepo gitRepo
+    then lib.commitIdFromGitRepo gitRepo
+    else if lib.pathExists revisionFile then lib.fileContents revisionFile
+    else default;
 
@@ -239,4 +240,4 @@ rec {
     else if a > b
-         then 1
-         else 0;
+    then 1
+    else 0;
 
@@ -316,3 +317,3 @@ rec {
   warn =
-    if lib.elem (builtins.getEnv "NIX_ABORT_ON_WARN") ["1" "true" "yes"]
+    if lib.elem (builtins.getEnv "NIX_ABORT_ON_WARN") [ "1" "true" "yes" ]
     then msg: builtins.trace "[1;31mwarning: ${msg}[0m" (abort "NIX_ABORT_ON_WARN=true; warnings are treated as unrecoverable errors.")
@@ -363,4 +364,4 @@ rec {
     in
-      lib.throwIfNot (unexpected == [])
-        "${msg}: ${builtins.concatStringsSep ", " (builtins.map builtins.toString unexpected)} unexpected; valid ones: ${builtins.concatStringsSep ", " (builtins.map builtins.toString valid)}";
+    lib.throwIfNot (unexpected == [ ])
+      "${msg}: ${builtins.concatStringsSep ", " (builtins.map builtins.toString unexpected)} unexpected; valid ones: ${builtins.concatStringsSep ", " (builtins.map builtins.toString valid)}";
 
@@ -383,3 +384,4 @@ rec {
   setFunctionArgs = f: args:
-    { # TODO: Should we add call-time "type" checking like built in?
+    {
+      # TODO: Should we add call-time "type" checking like built in?
       __functor = self: f;
@@ -429,3 +431,3 @@ rec {
     in
-      lib.concatMapStrings toHexDigit (toBaseDigits 16 i);
+    lib.concatMapStrings toHexDigit (toBaseDigits 16 i);
 
@@ -444,3 +446,3 @@ rec {
         if i < base
-        then [i]
+        then [ i ]
         else
@@ -450,7 +452,7 @@ rec {
           in
-            [r] ++ go q;
+          [ r ] ++ go q;
     in
-      assert (base >= 2);
-      assert (i >= 0);
-      lib.reverseList (go i);
+    assert (base >= 2);
+    assert (i >= 0);
+    lib.reverseList (go i);
 }
